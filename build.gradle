buildscript {
  ext {
    springBootVersion = '1.4.0.RELEASE'
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
  baseName = 'capstone'
  version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  jcenter()
}

ext {
  nettyVersion = '4.1.4.Final'
  querydslVersion = '4.1.3'
  javaslangVersion = '2.0.2'
}

dependencies {
  compile('org.springframework.boot:spring-boot-devtools')
  compile('org.springframework.boot:spring-boot-starter-cache')
  compile('org.springframework.boot:spring-boot-starter-data-jpa')
  compile('org.springframework.boot:spring-boot-starter-data-redis')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-websocket')
  compile('org.springframework.boot:spring-boot-starter-amqp')
  compile('io.projectreactor:reactor-core')
  compile('io.projectreactor:reactor-net')
  compile("io.netty:netty-all:${nettyVersion}")
  compile('mysql:mysql-connector-java')
  compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
  compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate5')
  compile("com.querydsl:querydsl-jpa:${querydslVersion}")
  compile("com.querydsl:querydsl-apt:${querydslVersion}:jpa")
  compile("io.javaslang:javaslang:${javaslangVersion}")

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'com.h2database:h2'
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.0'
}